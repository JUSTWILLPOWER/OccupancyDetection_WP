pwd
pwd()
setwd("C:\Users\hasna\Documents\GitHub\OccupancyDetection\Python")
setwd("C:\\Users\\hasna\\Documents\\GitHub\\OccupancyDetection\\Python\\")
df <- read.csv("snrVSRange.csv")
View(df)
View(df)
View(df)
View(df)
View(df)
View(df)
snrlm.fit <- lm(SNR ~ Range, data=df)
summary(snrlm.fit)
clc
df <- read.csv("snrVSRange.csv")
snrlm.fit <- lm(SNR ~ Range, data=df)
summary(snrlm.fit)
eovcheck(snrlm.fit)
library(s20x)
eovcheck(snrlm.fit)
plot(snrlm.fit, which-1)
plot(snrlm.fit, which=1)
scatter(x='SNR', y='Range', data=df)
scatterplot(x='SNR', y='Range', data=df)
plot(x='SNR', y='Range', data=df)
plot(snrlm.fit, which=1)
normcheck(snrlm.fit)
snrlm.fit = lm(log(SNR)~Range, data=df)
normcheck(snrlm.fit)
eovcheck(snrlm.fit)
cooks20x(snrlm.fit)
summary(snrlm.fit)
df <- read.csv("snrVSRange.csv")
setwd("C:\\Users\\hasna\\Documents\\GitHub\\OccupancyDetection\\Results\\SNR vs Range\\")
library(s20x)
df <- read.csv("snrVSRange.csv")
View(df)
View(df)
plot(x='Range', y='SNR', data=df)
df <- read.csv("snrVSRange.csv")
#initial plot
plot(x='Range', y='SNR', data=df)
View(df)
View(df)
#initial plot
scatter(x='Range', y='SNR', data=df)
#initial plot
plot(x='SNR', y='Range', data=df)
plot(x='SNR', y='Range', data=df)
df <- read.csv("snrVSRange.csv")
scatter(x='SNR', y='Range', data=df)
plot(x='Range', y='SNR', data=df)
df['SNR']
#initial plot
plot(x=df['Range'], y=df['SNR'])
plot(x=df['Range'], y=df['SNR'])
df['Range']
y=df['SNR']
y
library(s20x)
df <- read.csv("snrVSRange.csv")
#initial plot
plot(x=df['Range'], y=df['SNR'])
library(s20x)
df <- read.csv("snrVSRange.csv")
#initial plot
plot(df['Range'],df['SNR'])
library(s20x)
df <- read.csv("snrVSRange.csv")
#initial plot
plot(x = df$Range,y = df$SNR)
#log transform response
plot(x = df$Range,y = log(df$SNR))
library(s20x)
#log transform response
trendscatter(x = df$Range,y = log(df$SNR))
#fit multiplicative model
snrRange.fit = lm(log(SNR) ~ Range, data=df)
plot(snrRange.fit, which=1)
normcheck(snrRange.fit)
cooks20x(snrRange.fit) #
summary(snrRange.fit)
library(s20x)
df <- read.csv("snrVSRange.csv")
#initial plot
plot(x = df$Range,y = df$SNR)
#log transform response
plot(x = df$Range,y = log(df$SNR))
#fit multiplicative model
snrRange.fit = lm(log(SNR) ~ Range, data=df)
#check model assumptions
plot(snrRange.fit, which=1) #constant scatter
normcheck(snrRange.fit) #normally distributed
cooks20x(snrRange.fit) #no unduly influential points
#model summary
summary(snrRange.fit)
#find confidence interval of various
predDf <- data.frame(c(1,3,5))
exp(predict(snrRange.fit, , predDf, interval = "confidence"))
#find confidence interval of various
predDf <- data.frame(Range = c(1,3,5))
exp(predict(snrRange.fit, , predDf, interval = "confidence"))
predDf <- data.frame(Range = c(1,3,5))
predict(snrRange.fit, , predDf, interval = "confidence")
summary(snrRange.fit)
predDf <- data.frame(Range = c(1,3,5))
predict(snrRange.fit, predDf, interval = "confidence")
predDf <- data.frame(Range = c(1,3,5))
exp(predict(snrRange.fit, predDf, interval = "confidence"))
predDf <- data.frame(Range = c(1,3,5))
exp(predict(snrRange.fit, predDf, interval = "predict"))
plot(x = df$Range,y = log(df$SNR))
predDf <- data.frame(Range = c(1,3,5))
exp(predict(snrRange.fit, predDf, interval = "confidence"))
pwd()
library(s20x)
df <- read.csv("snrVSRange.csv")
#initial plot
plot(x = df$Range,y = df$SNR)
#log transform response
plot(x = df$Range,y = log(df$SNR))
#fit multiplicative model
snrRange.fit = lm(log(SNR) ~ Range, data=df)
#check model assumptions
plot(snrRange.fit, which=1) #constant scatter
normcheck(snrRange.fit) #normally distributed
cooks20x(snrRange.fit) #no unduly influential points
#model summary
summary(snrRange.fit)
#find confidence interval of various
predDf <- data.frame(Range = c(1,3,5))
exp(predict(snrRange.fit, predDf, interval = "confidence"))
